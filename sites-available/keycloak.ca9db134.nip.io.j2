{% if certbot_setup == True %}
server {
  listen 80;
  listen [::]:80;

  server_name keycloak.ca9db134.nip.io;

  root /var/www/keycloak.ca9db134.nip.io/html;

  location ~ /.well-known/acme-challenge {
    allow all;
    root /var/www/keycloak.ca9db134.nip.io/html;
  }
}
{% else %}
server {
  listen 80;
  listen [::]:80;

  server_name keycloak.ca9db134.nip.io;

  return 307 https://$host$request_uri;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name keycloak.ca9db134.nip.io;

  ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers               ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:AES128:AES256:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK;
  ssl_prefer_server_ciphers on;

  # Generated by let's encrypt certbot
  ssl_certificate     /etc/letsencrypt/live/keycloak.ca9db134.nip.io/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/keycloak.ca9db134.nip.io/privkey.pem;

  location / {
    proxy_pass http://{{ ipv4_address }}:8080;
    proxy_http_version 1.1;
    proxy_set_header Connection        "upgrade";
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
  }
}
{% endif %}
